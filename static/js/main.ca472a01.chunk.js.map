{"version":3,"sources":["assets/ninja.png","components/Header/Header.jsx","components/Home/Home.jsx","components/PopupResult/PopupResult.jsx","components/TestBox/TestBox.jsx","components/Timer/Timer.jsx","components/ResulCard/ResultCard.jsx","components/TestContainer/TestContainer.jsx","data/SampleParagraphs.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Home","setTestBtnClicked","onClick","PopupResult","result","resetDefault","netWPM","grossWPM","accurecy","TestBox","setUserInput","letterElementArray","handleBackspace","startTimer","userInput","value","onChange","e","target","onKeyDown","placeholder","Timer","timeRemaining","ResultCard","title","TestContainer","sampleParagraphs","App","getParagraph","Math","floor","random","length","useState","incorrectCharacters","setIncorrectCharacters","setResult","setTimeRemaining","timerStarted","setTimerStarted","paragraph","setParagraph","split","map","letter","index","setLetterElementArray","setIndex","testBtnClicked","useEffect","updateLetter","newLtterELementArray","props","prevIncorrectCharacters","newGrossWPM","newNetWPM","newAccurecy","keyCode","_timeRemaining","timer","setInterval","prevTimeReamaining","clearInterval","_paragraph","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca472a01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ninja.d3297455.png\";","import React from 'react'\r\nimport logo from './../../assets/ninja.png'\r\nimport './Header.css'\r\nexport default function Header() {\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"logo-container\">\r\n                <img src={logo} alt=\"ninja\"/>\r\n                <h1>TYPING NINJA</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Home.css'\r\n\r\nexport default function Home({\r\n    setTestBtnClicked\r\n}) {\r\n    return (\r\n        <div className='home'>\r\n                <div className=\"text-box\">\r\n                    <h1>What is your typing speed... ?</h1>\r\n                </div>\r\n                <button className='test-btn' onClick={() => setTestBtnClicked(true)}>Test Now</button>\r\n                \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './PopupResult.css'\r\nexport default function PopupResult({\r\n    result,\r\n    resetDefault\r\n}) {\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                <h1>Result</h1>\r\n                <h3>Net WPM : {(result.netWPM) ? result.netWPM : '00'}</h3>\r\n                <h3>Gross WPM : {(result.grossWPM) ? result.grossWPM : '00'}</h3>\r\n                <h3>Accurecy : {(result.accurecy) ? result.accurecy : '00'}</h3>\r\n                <button onClick={resetDefault}>Test Again</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './TestBox.css'\r\n\r\n\r\nexport default function TestBox({\r\n    setUserInput,\r\n    letterElementArray,\r\n    handleBackspace,\r\n    startTimer,\r\n    userInput\r\n}) {\r\n    \r\n    const handleTextInput = (e) => {\r\n        setUserInput(e.target.value);\r\n        startTimer();\r\n    }\r\n    return (\r\n        <div className='test-box'>\r\n            <div className=\"test-text\">\r\n                <p>{letterElementArray}</p>\r\n            </div>\r\n            <textarea value={userInput} onChange={handleTextInput} onKeyDown={(e) => handleBackspace(e)} className=\"typing-area\" placeholder='start typing ...'></textarea>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Timer.css'\r\n\r\nexport default function Timer({\r\n    timeRemaining\r\n}) {\r\n    return (\r\n        <div className='timer'>\r\n            00:{timeRemaining > 9 ? timeRemaining : `0${timeRemaining}`}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './ResultCard.css'\r\n\r\nexport default function ResultCard({\r\n    title,\r\n    value\r\n}) {\r\n    return (\r\n        <div className='result-card'>\r\n            <h4>{title}</h4>\r\n            <h3>{(!value) ? '00' : value}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PopupResult from '../PopupResult/PopupResult'\r\nimport TestBox from '../TestBox/TestBox'\r\nimport Timer from '../Timer/Timer'\r\nimport ResultCard from './../ResulCard/ResultCard'\r\nimport './TestContainer.css'\r\n\r\nexport default function TestContainer({\r\n    setUserInput,\r\n    letterElementArray,\r\n    handleBackspace,\r\n    timeRemaining,\r\n    startTimer,\r\n    result,\r\n    resetDefault,\r\n    userInput\r\n\r\n}) {\r\n    return (\r\n        <div className='test-container'>\r\n            <div className=\"test-container-top\">\r\n                <ResultCard title={'Gross WPM'} value={result.grossWPM} />\r\n                <ResultCard title={'Net WPM'} value={result.netWPM} />\r\n                <ResultCard title={'Accurecy'} value={result.accurecy} />\r\n                <Timer timeRemaining={timeRemaining}/>\r\n            </div>\r\n            <TestBox\r\n                setUserInput={setUserInput}\r\n                letterElementArray={letterElementArray}\r\n                handleBackspace={handleBackspace}\r\n                startTimer={startTimer}\r\n                userInput={userInput}\r\n             />\r\n             { !(timeRemaining > 0)  ? <PopupResult result={result} resetDefault={resetDefault}/> : ''}\r\n             \r\n        </div>\r\n    )\r\n}\r\n","export const sampleParagraphs = [\r\n    \"Before raies, centuries were only dates. One cannot separate peens from hoodless dramas. In ancient times motorcycles are themeless summers. Clonic basins show us how feet can be buzzards. What we don't know for sure is whether or not a senseless bonsai's canvas comes with it the thought that the unseized bangle is a Tuesday. A celsius can hardly be considered a landed fight without also being a correspondent. In ancient times a parenthesis is a snafu occupation. In ancient times the tearing bugle reveals itself as a bogus sing to those who look. A workshop is a gander from the right perspective. Extending this logic, the unsquared tower comes from a bumptious airport.\",\r\n    \"In ancient times a pressure is a birthday from the right perspective. We can assume that any instance of a shallot can be construed as a frostless jam. A blowzy grey's protest comes with it the thought that the fourteenth fork is a cloth. This is not to discredit the idea that authors often misinterpret the alloy as a thenar mosquito, when in actuality it feels more like a pulpy pantyhose. We can assume that any instance of a branch can be construed as a kindred perch. In ancient times a fahrenheit is a nitrogen from the right perspective. In ancient times before advantages, relatives were only steams. Unfortunately, that is wrong; on the contrary, their cloud was, in this moment, a woundless vision. A religion of the clam is assumed to be an exchanged quiet. The zeitgeist contends that their grass was, in this moment, a millionth william.\",\r\n    \"Though we assume the latter, some unthawed virgos are thought of simply as dinghies. A square sees a den as a convinced emery. A shrine sees a slip as a countless eyelash. An orchestra is a felon celeste. The first chesty appendix is, in its own way, a cake. A foolish camera is an eggplant of the mind. We can assume that any instance of a brother-in-law can be construed as a barebacked shrine. To be more specific, a pickle of the supermarket is assumed to be a muckle hook. We can assume that any instance of an iraq can be construed as an unmanned ravioli. A vinyl is a pennoned start.\",\r\n    \"A bedroom is a drum from the right perspective. The niece of a birthday becomes a dudish spandex. A flugelhorn is the rhinoceros of a gender. Fucoid shampoos show us how ideas can be pears. To be more specific, the stepdaughter is a hose. Belgians are stannous anethesiologists. Nowhere is it disputed that a ticket sees a chocolate as a quippish coat. Unfortunately, that is wrong; on the contrary, the first unguled cappelletti is, in its own way, a whistle. Some posit the tinkly soprano to be less than glaikit. However, the literature would have us believe that a moneyed match is not but a brush.\",\r\n    \"The seed is a memory. A chance can hardly be considered a foxy barge without also being a children. A bathtub is the pie of an eyeliner. The literature would have us believe that a floppy design is not but a plane. However, we can assume that any instance of a thistle can be construed as a pokies selection. An ovate salad without algerias is truly a skill of beamy offers. Ceilings are after databases. Though we assume the latter, a sixteen multi-hop is a january of the mind. The snowlike owl comes from a stubby snowboard. Framed in a different way, a cabinet can hardly be considered a wintry layer without also being a shake.\",\r\n    \"However, we can assume that any instance of an education can be construed as a pencilled pain. A seat is a vegetarian from the right perspective. Some posit the cattish brazil to be less than wordless. A cost sees a metal as a gripping crate. The literature would have us believe that a dreamful softdrink is not but a gosling. The zeitgeist contends that few can name a turfy hardboard that isn't a hempen sing. In modern times those thrills are nothing more than multimedias. The burlesque spring comes from an enate limit. It's an undeniable fact, really; the greek of a stream becomes a jointed cheque. The grade is a den.\",\r\n    \"A palmy risk's breakfast comes with it the thought that the minim examination is a justice. A sapless sturgeon without actions is truly a romanian of disused locusts. They were lost without the conceived maple that composed their fedelini. One cannot separate cherries from blushful riverbeds. Spriggy laces show us how sails can be gladioluses. The zeitgeist contends that the lynx of a shoulder becomes a scandent mexican. Authors often misinterpret the cicada as a spinous dragonfly, when in actuality it feels more like a waxen bull. Their cap was, in this moment, a bumbling trial. We know that a chippy slash without hardwares is truly a grandfather of tannic undershirts. Framed in a different way, one cannot separate visitors from blackish stages.\"\r\n]","import React, { useEffect, useState } from 'react'\r\nimport Header from './components/Header/Header'\r\nimport Home from './components/Home/Home'\r\nimport TestContainer from './components/TestContainer/TestContainer'\r\nimport { sampleParagraphs } from './data/SampleParagraphs'\r\nimport './App.css'\r\n\r\n\r\nexport default function App() {\r\n    const maxTime = 60;\r\n    const getParagraph = () => {\r\n        return sampleParagraphs[Math.floor(Math.random() * sampleParagraphs.length)];\r\n    }\r\n    const [incorrectCharacters, setIncorrectCharacters] = useState(0);\r\n    const [result, setResult] = useState({grossWPM: 0, netWPM: 0, accurecy: 0})\r\n    const [timeRemaining, setTimeRemaining] = useState(maxTime);\r\n    const [timerStarted, setTimerStarted] = useState(false)\r\n    const [paragraph, setParagraph] = useState(getParagraph())\r\n    const [letterElementArray, setLetterElementArray] = useState(paragraph.split(\"\").map((letter, index) => { return <span key={index} className='not-attempted'>{letter}</span> }))\r\n    const [userInput, setUserInput] = useState('');\r\n    const [index, setIndex] = useState(-1);\r\n    const [testBtnClicked, setTestBtnClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIndex(userInput.length - 1);\r\n    }, [userInput])\r\n\r\n    const updateLetter = (className) => {\r\n        let newLtterELementArray = [...letterElementArray];\r\n        newLtterELementArray[index] = <span className={className} key={index}>{paragraph[index]}</span>;\r\n        setLetterElementArray(newLtterELementArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (index !== -1) {\r\n            if (userInput[index] === paragraph[index]) {\r\n                updateLetter('correct');\r\n            } else if(letterElementArray[index].props.className !== 'incorrect') {\r\n                updateLetter('incorrect');\r\n                setIncorrectCharacters(prevIncorrectCharacters => prevIncorrectCharacters + 1);\r\n            }\r\n        }\r\n    }, [index]);\r\n\r\n    useEffect(()=> {\r\n        let newGrossWPM = (userInput.length/5)/((maxTime-timeRemaining)/60);\r\n        newGrossWPM = Math.floor(newGrossWPM * 100) / 100;\r\n        let newNetWPM = newGrossWPM - (incorrectCharacters/5)/((maxTime-timeRemaining)/60);\r\n        newNetWPM = Math.floor(newNetWPM * 100) / 100;\r\n        let newAccurecy = ((userInput.length - incorrectCharacters)/userInput.length) * 100;\r\n        newAccurecy = Math.floor(newAccurecy * 100) / 100;\r\n        setResult({grossWPM: newGrossWPM, netWPM: newNetWPM, accurecy: newAccurecy});\r\n    }, [timeRemaining]);\r\n\r\n    \r\n\r\n    const handleBackspace = (e) => {\r\n        if (e.keyCode === 8 && index >= 0) {\r\n            if(letterElementArray[index].props.className === 'incorrect'){\r\n                setIncorrectCharacters(prevIncorrectCharacters => prevIncorrectCharacters - 1)\r\n            }\r\n            updateLetter('not-attempted');\r\n        }\r\n    }\r\n    const startTimer = () => {\r\n        if(!timerStarted){\r\n            let _timeRemaining = timeRemaining;\r\n            const timer = setInterval(()=> {\r\n               if(_timeRemaining > 0) { \r\n                   setTimeRemaining(prevTimeReamaining => prevTimeReamaining - 1);\r\n                   _timeRemaining--; \r\n               } else {\r\n                   clearInterval(timer)\r\n               }\r\n            }, 1000)\r\n            setTimerStarted(true)\r\n        }\r\n    }\r\n\r\n    const resetDefault = () => {\r\n        const _paragraph = getParagraph();\r\n\r\n        setParagraph(_paragraph);\r\n        setLetterElementArray(_paragraph.split(\"\").map((letter, index) => { return <span key={index} className='not-attempted'>{letter}</span> }));\r\n        setIncorrectCharacters(0);\r\n        setResult({grossWPM: 0, netWPM: 0, accurecy: 0});\r\n        setTimeRemaining(maxTime);\r\n        setTimerStarted(false);\r\n        setUserInput('')\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            {!testBtnClicked ? (\r\n                <Home\r\n                    setTestBtnClicked={setTestBtnClicked}\r\n                />\r\n            ) : (\r\n                <TestContainer\r\n                    setUserInput={setUserInput}\r\n                    letterElementArray={letterElementArray}\r\n                    handleBackspace={handleBackspace}\r\n                    timeRemaining={timeRemaining}\r\n                    startTimer={startTimer}\r\n                    result={result}\r\n                    resetDefault={resetDefault}\r\n                    userInput={userInput}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));"],"sourceRoot":""}